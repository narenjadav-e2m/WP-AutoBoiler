name: Download Repo as Zip + Upload Artifact

on:
  workflow_dispatch:
    inputs:
      resumeUrl:
        description: 'N8N resume URL'
        required: true
      artifact_name:
        description: 'Name of the artifact'
        required: true
        default: 'wp-autoboiler'

jobs:
  download-zip:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create WordPress-ready theme ZIP
        run: |
          # Create a temporary directory
          mkdir -p /tmp/theme-build
          
          # Copy all files to the temporary directory
          shopt -s dotglob
          cp -r * /tmp/theme-build/ 2>/dev/null || true
          
          # Remove any .git directories and GitHub-specific files
          find /tmp/theme-build -name ".git*" -exec rm -rf {} + 2>/dev/null || true
          find /tmp/theme-build -name ".github" -exec rm -rf {} + 2>/dev/null || true
          
          # Create the ZIP file with files at the root level
          cd /tmp/theme-build
          zip -r ${{ github.workspace }}/${{ github.event.inputs.artifact_name }}.zip . -x "*.git*"

      - name: Upload artifact (uncompressed)
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.artifact_name }}
          path: ${{ github.event.inputs.artifact_name }}.zip
          compression-level: 0  # Disable compression to avoid double-zipping

      - name: Get artifact ID + output download URL
        id: set-output
        run: |
          artifact_id=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts \
            | jq '.artifacts[0].id')

          echo "artifact_zip_url=https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${artifact_id}/zip" >> $GITHUB_OUTPUT

      - name: Call N8N resume URL
        run: |
          curl -X POST "${{ inputs.resumeUrl }}" \
            -H "Content-Type: application/json" \
            -d "{\"message\": \"Build completed\", \"artifact_zip_url\": \"${{ steps.set-output.outputs.artifact_zip_url }}\"}"